<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="contractMapper">

	<!-- INSERT -->
	<insert id="insert"
		parameterType="com.insurance.sce.model.contract.Contract">
		INSERT INTO contract( contractId, insurantId,
		insuranceId, effectiveness, special, lifespan, fee, unpaidPeriod)
		VALUES (#{contractId}, #{insurantId}, #{insuranceId},
		#{effectiveness},
		#{special}, #{lifespan}, #{fee}, #{unpaidPeriod})
	</insert>

	<!-- SELECT -->
	<select id="selectAll"
		resultType="com.insurance.sce.model.contract.Contract">
		SELECT * FROM contract
	</select>
	<select id="selectAllContractId" resultType="String">
		SELECT contractId
		FROM contract
	</select>
	<select id="selectAllIds"
		resultType="com.insurance.sce.model.contract.Contract">
		SELECT contractId, insuranceId, insurantId, effectiveness,
		unpaidPeriod, fee FROM contract
	</select>
	<select id="selectListByInsurant"
		resultType="com.insurance.sce.model.contract.Contract">
		SELECT * FROM contract
		WHERE insurantId = #{insurantId}
	</select>
	<select id="select"
		resultType="com.insurance.sce.model.contract.Contract">
		SELECT * FROM contract
		WHERE contractId = #{contractId}
	</select>
	<select id="selectUnpaidAndFee"
		resultType="com.insurance.sce.model.contract.Contract">
		SELECT contractId, fee, unpaidPeriod FROM contract
		WHERE contractId = #{contractId}
	</select>
	<select id="selectNotEffectiveContract"
		resultType="com.insurance.sce.model.contract.Contract">
		SELECT * FROM contract WHERE effectiveness = 0
	</select>
	<select id="selectContractInsurance" resultType="HashMap">
		SELECT T1.contractId, T1.fee, T2.insuranceId, T2.type, T2.name AS
				insuranceName, T3.name AS insurantName, T3.age, T3.gender, T3.job,
				T3.phoneNumber, T3.address
		FROM contract T1, insurance T2, insurant T3
		WHERE T1.effectiveness = TRUE
		AND T1.insuranceId = T2.insuranceId
		AND
		T1.insurantId = T3.insurantId
		AND T1.insurantId IN (
		SELECT insurantId
		FROM insurant
		WHERE customerId = "hong"
		)
	</select>

	
	<select id="selectAllData" resultType="HashMap">
		SELECT contractId, T1.insurantId, T1.insuranceId, special, T2.name, type, T3.gender, basicFee, age
		FROM contract T1
		LEFT OUTER JOIN insurance T2
		ON(T1.insuranceId = T2.insuranceId)
			LEFT OUTER JOIN insurant T3
			ON(T1.insurantId = T3.insurantId)
			WHERE T1.effectiveness = 0
	</select>
	
	<!-- UPDATE -->
	<update id="updateFee"
		parameterType="com.insurance.sce.model.contract.Contract">
		UPDATE contract
		SET fee = #{fee}
		WHERE contractId =
		#{contractId}
	</update>
	<update id="updateEffectiveness"
		parameterType="com.insurance.sce.model.contract.Contract">
		UPDATE contract
		SET effectiveness = #{effectiveness}
		WHERE contractId = #{contractId}
	</update>
	<update id="updateLifespan"
		parameterType="com.insurance.sce.model.contract.Contract">
		UPDATE contract
		SET lifespan = #{lifespan}
		WHERE
		contractId = #{contractId}
	</update>
	<update id="updateUnpaidPeriod"
		parameterType="com.insurance.sce.model.contract.Contract">
		UPDATE contract
		SET unpaidPeriod = #{unpaidPeriod}
		WHERE
		contractId = #{contractId}
	</update>
	<update id="updateSpecial"
		parameterType="com.insurance.sce.model.contract.Contract">
		UPDATE contract
		SET special = #{special}
		WHERE contractId
		= #{contractId}
	</update>

	<!-- DELETE -->
	<delete id="delete" parameterType="String">
		DELETE FROM contract
		WHERE
		contractId = #{contractId}
	</delete>



</mapper>